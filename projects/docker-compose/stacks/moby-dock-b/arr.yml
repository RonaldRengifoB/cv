version: "3.2"
services:
  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: $HEIMDALL_SERVICE_NAME
    environment:
      - PUID=$PUID
      - PGID=$PGID
    ports:
      - 443:443
#    labels:
#    - traefik.enable=true 
#    - traefik.http.routers.$HEIMDALL_SERVICE_NAME.rule=Host(`$HEIMDALL_ADDR_NAME.$DOMAIN`)
#    - traefik.http.routers.$HEIMDALL_SERVICE_NAME.entrypoints=web
#    - traefik.http.routers.$HEIMDALL_SERVICE_NAME-https.rule=Host(`$HEIMDALL_ADDR_NAME.$DOMAIN`)
#    - traefik.http.routers.$HEIMDALL_SERVICE_NAME-https.entrypoints=webs
#    - traefik.http.routers.$HEIMDALL_SERVICE_NAME-https.middlewares=$AUTHELIA_SERVICE_NAME@docker
#    - traefik.http.routers.$HEIMDALL_SERVICE_NAME-https.tls=true
#    - traefik.http.routers.$HEIMDALL_SERVICE_NAME-https.service=$HEIMDALL_SERVICE_NAME
#    - traefik.http.routers.$HEIMDALL_SERVICE_NAME-https.tls.certresolver=$CERTRESOLVER
#    - traefik.http.services.$HEIMDALL_SERVICE_NAME.loadbalancer.server.port=443
#    - traefik.http.services.$HEIMDALL_SERVICE_NAME.loadbalancer.server.scheme=https
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - type: volume
        source: heimdall
        target: /config
        volume:
          nocopy: true
    restart: always
    networks:
      - arr 

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: $QBITTORRENT_SERVICE_NAME
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - WEBUI_PORT=7070
    ports:
      - 6881:6881
      - 6881:6881/udp
      - 7070:7070
#    labels:
#      - traefik.enable=true 
#      - traefik.http.routers.$QBITTORRENT_SERVICE_NAME.rule=Host(`$QBITTORRENT_ADDR_NAME.$DOMAIN`)
#      - traefik.http.routers.$QBITTORRENT_SERVICE_NAME.entrypoints=web
#      - traefik.http.routers.$QBITTORRENT_SERVICE_NAME-https.rule=Host(`$QBITTORRENT_ADDR_NAME.$DOMAIN`)
#      - traefik.http.routers.$QBITTORRENT_SERVICE_NAME-https.entrypoints=webs
#check connectivity with external apps
#      - traefik.http.routers.$QBITTORRENT_SERVICE_NAME-https.middlewares=$AUTHELIA_SERVICE_NAME@docker 
#      - traefik.http.routers.$QBITTORRENT_SERVICE_NAME-https.tls=true
#      - traefik.http.routers.$QBITTORRENT_SERVICE_NAME-https.service=$QBITTORRENT_SERVICE_NAME
#      - traefik.http.routers.$QBITTORRENT_SERVICE_NAME-https.tls.certresolver=$CERTRESOLVER
#      - traefik.http.services.$QBITTORRENT_SERVICE_NAME.loadbalancer.server.port=7070
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /mnt/data/torrents:/data/torrents
      - /mnt/download/torrents:/data/torrents/other
      - type: volume
        source: qbittorrent
        target: /config
        volume:
          nocopy: true
    networks:
      - arr  
    restart: always

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: $SABNZBD_SERVICE_NAME
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    ports:
      - 8080:8080
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /mnt/data/usenet/complete:/data/usenet/complete
      - /mnt/data/usenet/incomplete:/data/usenet/incomplete
      - type: volume
        source: sabnzbd
        target: /config
        volume:
          nocopy: true
    
    restart: always
    networks:
      - arr  
  jdownloader:
    image: jlesage/jdownloader-2
    container_name: $JDOWNLOADER_SERVICE_NAME
    ports:
      - 5800:5800
#    labels:
#      - traefik.enable=true 
#      - traefik.http.routers.$JDOWNLOADER_SERVICE_NAME.rule=Host(`$JDOWNLOADER_ADDR_NAME.$DOMAIN`)
#      - traefik.http.routers.$JDOWNLOADER_SERVICE_NAME.entrypoints=web
#      - traefik.http.routers.$JDOWNLOADER_SERVICE_NAME-https.rule=Host(`$JDOWNLOADER_ADDR_NAME.$DOMAIN`)
#      - traefik.http.routers.$JDOWNLOADER_SERVICE_NAME-https.entrypoints=webs
#      - traefik.http.routers.$JDOWNLOADER_SERVICE_NAME-https.middlewares=$AUTHELIA_SERVICE_NAME@docker
#      - traefik.http.routers.$JDOWNLOADER_SERVICE_NAME-https.tls=true
#      - traefik.http.routers.$JDOWNLOADER_SERVICE_NAME-https.service=$JDOWNLOADER_SERVICE_NAME
#      - traefik.http.routers.$JDOWNLOADER_SERVICE_NAME-https.tls.certresolver=$CERTRESOLVER
#      - traefik.http.services.$JDOWNLOADER_SERVICE_NAME.loadbalancer.server.port=5000
    volumes:
        - /etc/localtime:/etc/localtime:ro
        - /etc/timezone:/etc/timezone:ro
        - /mnt/download/jdownloader:/output
        - type: volume
          source: jdownloader
          target: /config
          volume:
            nocopy: true
    networks:
      - arr  
    restart: always

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: $PROWLARR_SERVICE_NAME
    environment:
      - PUID=$PUID
      - PGID=$PGID
    ports:
      - 9696:9696
#    labels:
#      - traefik.enable=true 
#      - traefik.http.routers.$PROWLARR_SERVICE_NAME.rule=Host(`$PROWLARR_ADDR_NAME.$DOMAIN`)
#      - traefik.http.routers.$PROWLARR_SERVICE_NAME.entrypoints=web
#      - traefik.http.routers.$PROWLARR_SERVICE_NAME-https.rule=Host(`$PROWLARR_ADDR_NAME.$DOMAIN`)
#      - traefik.http.routers.$PROWLARR_SERVICE_NAME-https.entrypoints=webs
#      - traefik.http.routers.$PROWLARR_SERVICE_NAME-https.tls=true
#      - traefik.http.routers.$PROWLARR_SERVICE_NAME-https.service=$PROWLARR_SERVICE_NAME
#      - traefik.http.routers.$PROWLARR_SERVICE_NAME-https.tls.certresolver=$CERTRESOLVER
#      - traefik.http.services.$PROWLARR_SERVICE_NAME.loadbalancer.server.port=9696
    volumes:
    - /etc/localtime:/etc/localtime:ro
    - /etc/timezone:/etc/timezone:ro    
    - type: volume
      source: prowlarr
      target: /config
      volume:
        nocopy: true
    networks:
      - arr
    restart: always  
  
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: $SONARR_SERVICE_NAME
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    ports:
      - 8989:8989
#    labels:
#      - traefik.enable=true 
#      - traefik.http.routers.$SONARR_SERVICE_NAME.rule=Host(`$SONARR_ADDR_NAME.$DOMAIN`)
#      - traefik.http.routers.$SONARR_SERVICE_NAME.entrypoints=web
#      - traefik.http.routers.$SONARR_SERVICE_NAME-https.rule=Host(`$SONARR_ADDR_NAME.$DOMAIN`)
#      - traefik.http.routers.$SONARR_SERVICE_NAME-https.entrypoints=webs
#      - traefik.http.routers.$SONARR_SERVICE_NAME-https.tls=true
#      - traefik.http.routers.$SONARR_SERVICE_NAME-https.service=$SONARR_SERVICE_NAME
#      - traefik.http.routers.$SONARR_SERVICE_NAME-https.tls.certresolver=$CERTRESOLVER
#      - traefik.http.services.$SONARR_SERVICE_NAME.loadbalancer.server.port=8989
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /mnt/data:/data
      - type: volume
        source: sonarr
        target: /config
        volume:
          nocopy: true
    networks:
      - arr
    restart: always
  
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: $RADARR_SERVICE_NAME
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    ports:
      - 7878:7878
#    labels:
#      - traefik.enable=true 
#      - traefik.http.routers.$RADARR_SERVICE_NAME.rule=Host(`$RADARR_ADDR_NAME.$DOMAIN`)
#      - traefik.http.routers.$RADARR_SERVICE_NAME.entrypoints=web
#      - traefik.http.routers.$RADARR_SERVICE_NAME-https.rule=Host(`$RADARR_ADDR_NAME.$DOMAIN`)
#      - traefik.http.routers.$RADARR_SERVICE_NAME-https.entrypoints=webs
#      - traefik.http.routers.$RADARR_SERVICE_NAME-https.tls=true
#      - traefik.http.routers.$RADARR_SERVICE_NAME-https.service=$RADARR_SERVICE_NAME
#      - traefik.http.routers.$RADARR_SERVICE_NAME-https.tls.certresolver=$CERTRESOLVER
#      - traefik.http.services.$RADARR_SERVICE_NAME.loadbalancer.server.port=7878
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro    
      - /mnt/data:/data
      - type: volume
        source: radarr
        target: /config
        volume:
          nocopy: true
    networks:
      - arr
    restart: always
  
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: $BAZARR_SERVICE_NAME
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    ports:
      - 6767:6767
#    labels:
#      - traefik.enable=true 
#      - traefik.http.routers.$BAZARR_SERVICE_NAME.rule=Host(`$BAZARR_ADDR_NAME.$DOMAIN`)
#      - traefik.http.routers.$BAZARR_SERVICE_NAME.entrypoints=web
#      - traefik.http.routers.$BAZARR_SERVICE_NAME-https.rule=Host(`$BAZARR_ADDR_NAME.$DOMAIN`)
#      - traefik.http.routers.$BAZARR_SERVICE_NAME-https.entrypoints=webs
#      - traefik.http.routers.$BAZARR_SERVICE_NAME-https.tls=true
#      - traefik.http.routers.$BAZARR_SERVICE_NAME-https.service=$BAZARR_SERVICE_NAME
#      - traefik.http.routers.$BAZARR_SERVICE_NAME-https.tls.certresolver=$CERTRESOLVER
#      - traefik.http.services.$BAZARR_SERVICE_NAME.loadbalancer.server.port=6767
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro    
      - /mnt/data:/data
      - type: volume
        source: bazarr
        target: /config
        volume:
          nocopy: true
    networks:
      - arr
    restart: always

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: $JELLYSEERR_SERVICE_NAME
    environment:
      - LOG_LEVEL=debug
      - TZ=$TZ
    ports:
      - 5055:5055
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/data/torrents:/data/torrents
      - type: volume
        source: jellyseerr
        target: /app/config
        volume:
          nocopy: true
    networks:
      - arr 
    restart: always

  qbitrr:
    image: feramance/qbitrr:latest
    container_name: $QBITRR_SERVICE_NAME
    user: $PUID:$PGID
    environment:
      - TZ=$TZ
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/data/torrents:/data/torrents
      - type: volume
        source: qbitrr
        target: /config
        volume:
          nocopy: true
    restart: always
    networks:
      - arr

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: $FLARESOLVERR_SERVICE_NAME
    environment:
      - LOG_LEVEL=$FLARESOLVERR_LOG_LEVEL
      - LOG_HTML=$FLARESOLVERR_LOG_HTML
      - CAPTCHA_SOLVER=$FLARESOLVERR_CAPTCHA_SOLVER
      - TZ=$TZ
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    ports:
      - 8191:8191
    networks:
      - arr
    restart: always

  autobrr:
    container_name: $AUTOBRR_SERVICE_NAME
    image: ghcr.io/autobrr/autobrr:latest
    user: 1000:1000
    environment:
      - TZ=$TZ
      - AUTOBRR__DATABASE_TYPE=$AUTOBRR_DATABASE_TYPE
      - AUTOBRR__POSTGRES_HOST=$AUTOBRR_POSTGRES_HOST
      - AUTOBRR__POSTGRES_PORT=$AUTOBRR_POSTGRES_PORT
      - AUTOBRR__POSTGRES_DATABASE=$AUTOBRR_POSTGRES_DATABASE
      - AUTOBRR__POSTGRES_USER=$AUTOBRR_POSTGRES_USER
      - AUTOBRR__POSTGRES_PASS=$AUTOBRR_POSTGRES_PASS
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - type: volume
        source: autobrr
        target: /config
        volume:
          nocopy: true
    ports:
      - 7474:7474
    networks:
      - arr
    restart: always

  omegabrr:
    container_name: $OMEGABRR_SERVICE_NAME
    image: ghcr.io/autobrr/omegabrr:latest
    ports:
      - 7441:7441
    user: 1000:1000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - type: volume
        source: omegabrr
        target: /config
        volume:
          nocopy: true
    networks:
      - arr
    restart: always

networks:
  arr:
    name: arr
    ipam:
      driver: default
      config:
        - subnet: $ARR_SUBNET
          gateway: $ARR_GW

volumes:
  heimdall:
    driver_opts:
      type: "nfs4"
      o: "addr=$NAS_ADDR,$NAS_MOUNT_PARAMS"
      device: "$NAS_PATH/heimdall/"

  qbittorrent:
    driver_opts:
      type: "nfs4"
      o: "addr=$NAS_ADDR,$NAS_MOUNT_PARAMS"
      device: "$NAS_PATH/qbittorrent/"

  sabnzbd:
    driver_opts:
      type: "nfs4"
      o: "addr=$NAS_ADDR,$NAS_MOUNT_PARAMS"
      device: "$NAS_PATH/sabnzbd/"

  jdownloader:
    driver_opts:
      type: "nfs4"
      o: "addr=$NAS_ADDR,$NAS_MOUNT_PARAMS"
      device: "$NAS_PATH/jdownloader/"

  prowlarr:
    driver_opts:
      type: "nfs4"
      o: "addr=$NAS_ADDR,$NAS_MOUNT_PARAMS"
      device: "$NAS_PATH/prowlarr"

  sonarr:
    driver_opts:
      type: "nfs4"
      o: "addr=$NAS_ADDR,$NAS_MOUNT_PARAMS"
      device: "$NAS_PATH/sonarr"

  radarr:
    driver_opts:
      type: "nfs4"
      o: "addr=$NAS_ADDR,$NAS_MOUNT_PARAMS"
      device: "$NAS_PATH/radarr"    

  bazarr:
    driver_opts:
      type: "nfs4"
      o: "addr=$NAS_ADDR,$NAS_MOUNT_PARAMS"
      device: "$NAS_PATH/bazarr"

  qbitrr:
    driver_opts:
      type: "nfs4"
      o: "addr=$NAS_ADDR,$NAS_MOUNT_PARAMS"
      device: "$NAS_PATH/qbitrr"

  jellyseerr:
    driver_opts:
      type: "nfs4"
      o: "addr=$NAS_ADDR,$NAS_MOUNT_PARAMS"
      device: "$NAS_PATH/jellyseerr"

  autobrr:
    driver_opts:
      type: "nfs4"
      o: "addr=$NAS_ADDR,$NAS_MOUNT_PARAMS"
      device: "$NAS_PATH/autobrr"
  
  omegabrr:
    driver_opts:
      type: "nfs4"
      o: "addr=$NAS_ADDR,$NAS_MOUNT_PARAMS"
      device: "$NAS_PATH/omegabrr"