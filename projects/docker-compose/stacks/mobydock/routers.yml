version: "3.2"
services:
  cloudflared:
    container_name: $CLOUDFLARE_SERVICE_NAME
    image: cloudflare/cloudflared
    restart: unless-stopped
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=$CLOUDFLARE_TUNNEL_TOKEN
    networks:
      - controllers
  
  authelia:
    image: authelia/authelia:latest
    container_name: $AUTHELIA_SERVICE_NAME
    ports:
      - 9959:9959
    depends_on:
      - $TRAEFIK_SERVICE_NAME      
    environment:
      - TZ=$TZ
      - AUTHELIA_JWT_SECRET=$AUTHELIA_JWT_SECRET
      - AUTHELIA_SESSION_SECRET=$AUTHELIA_SESSION_SECRET
      - AUTHELIA_STORAGE_ENCRYPTION_KEY=$AUTHELIA_STORAGE_ENCRYPTION_KEY
      - AUTHELIA_STORAGE_MYSQL_PASSWORD=$AUTHELIA_STORAGE_MYSQL_PASSWORD
      - AUTHELIA_NOTIFIER_SMTP_PASSWORD=$AUTHELIA_NOTIFIER_SMTP_PASSWORD
    labels:
      - traefik.enable=true
      - traefik.http.routers.$AUTHELIA_SERVICE_NAME.rule=Host(`$AUTHELIA_ADDR_NAME.$DOMAIN`)
      - traefik.http.routers.$AUTHELIA_SERVICE_NAME.entrypoints=web
      - traefik.http.routers.$AUTHELIA_SERVICE_NAME-https.rule=Host(`$AUTHELIA_ADDR_NAME.$DOMAIN`)      
      - traefik.http.routers.$AUTHELIA_SERVICE_NAME-https.entrypoints=webs
      - traefik.http.routers.$AUTHELIA_SERVICE_NAME-https.tls=true
      - traefik.http.routers.$AUTHELIA_SERVICE_NAME-https.service=$AUTHELIA_SERVICE_NAME
      - traefik.http.routers.$AUTHELIA_SERVICE_NAME-https.tls.certresolver=$CERTRESOLVER
      - traefik.http.middlewares.$AUTHELIA_SERVICE_NAME.forwardauth.address=http://$AUTHELIA_SERVICE_NAME:9091/api/verify?rd=https://$AUTHELIA_ADDR_NAME.$DOMAIN/
      - traefik.http.middlewares.$AUTHELIA_SERVICE_NAME.forwardauth.trustForwardHeader=true
      - traefik.http.middlewares.$AUTHELIA_SERVICE_NAME.forwardauth.authResponseHeaders=Remote-User, Remote-Groups, Remote-Name, Remote-Email
      - traefik.http.middlewares.$AUTHELIA_SERVICE_NAME-basic.forwardauth.address=http://$AUTHELIA_SERVICE_NAME:9091/api/verify?auth=basic
      - traefik.http.middlewares.$AUTHELIA_SERVICE_NAME-basic.forwardauth.trustForwardHeader=true
      - traefik.http.middlewares.$AUTHELIA_SERVICE_NAME-basic.forwardauth.authResponseHeaders=Remote-User, Remote-Groups, Remote-Name, Remote-Email
      - traefik.http.services.$AUTHELIA_SERVICE_NAME.loadbalancer.server.port=9091  
    volumes:
      - type: volume
        source: authelia
        target: /config 
        volume:
          nocopy: true
      - type: volume
        source: authelia-secrets
        target: /config/secrets 
        volume:
          nocopy: true    
    restart: unless-stopped
    networks:
      - controllers
      - internalapps

  traefik:
    image: "traefik:latest"
    container_name: "$TRAEFIK_SERVICE_NAME"
# ports disabled because we are using cloudflare tunnel
#    ports:
#      - 80:80
#      - 443:443
#      - 21115:21115/tcp
#      - 21116:21116/tcp
#      - 21117:21117/tcp
#      - 21118:21118/tcp
#      - 21119:21119/tcp
#      - 21116:21116/udp
    ports:
      - 8080:8080
    environment:
      - CLOUDFLARE_EMAIL=$CLOUDFLARE_EMAIL
      - CLOUDFLARE_DNS_API_TOKEN=$CLOUDFLARE_DNS_API_TOKEN
    command:
      # Enable the Traefik log, for configurations and errors
      - --log.level=WARN
      - --global.checkNewVersion=true
      - --global.sendAnonymousUSage=false
      # Enable the Dashboard and API
      - --api=true
      - --api.insecure=true
      - --api.dashboard=true
      # Define providers
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.directory=/data/traefik-fileprovider.yml
      # Metrics
      - --metrics.prometheus=true
      - --metrics.prometheus.buckets=0.1,0.3,1.2,5.0
      # Create an entrypoint "http" listening on address 80
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=webs
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      # Create an entrypoint "https" listening on address 443
      - --entrypoints.webs.address=:443
      # Entry point for RustDesk server
      #- --entrypoints.rd5-tcp.address=:21115/tcp
      #- --entrypoints.rd6-tcp.address=:21116/tcp
      #- --entrypoints.rd7-tcp.address=:21117/tcp
      #- --entrypoints.rd8-tcp.address=:21118/tcp
      #- --entrypoints.rd9-tcp.address=:21119/tcp
      #- --entrypoints.rd6-udp.address=:21116/udp
      # Setup letsEncrypt por DNS Validation
      - --certificatesresolvers.$CERTRESOLVER.acme.dnschallenge=true
      - --certificatesresolvers.$CERTRESOLVER.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.$CERTRESOLVER.acme.storage=acme.json
      - --certificatesresolvers.$CERTRESOLVER.acme.email=$CERTRESOLVER_ACME_EMAIL
      # Avoid validation of self-signed certificates in containers
      - --serverstransport.insecureskipverify=true
    labels:
      # Enable Traefik for this service, to make it available in the public network
      - traefik.enable=true 
      - traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https
      # Dashboard HTTP here
      - traefik.http.routers.$TRAEFIK_SERVICE_NAME.rule=Host(`$TRAEFIK_ADDR_NAME.$DOMAIN`)
      - traefik.http.routers.$TRAEFIK_SERVICE_NAME.entrypoints=web
      # Dashboard HTTPS here
      - traefik.http.routers.$TRAEFIK_SERVICE_NAME-https.rule=Host(`$TRAEFIK_ADDR_NAME.$DOMAIN`)
      - traefik.http.routers.$TRAEFIK_SERVICE_NAME-https.entrypoints=webs
      - traefik.http.routers.$TRAEFIK_SERVICE_NAME-https.middlewares=$AUTHELIA_SERVICE_NAME@docker
      - traefik.http.routers.$TRAEFIK_SERVICE_NAME-https.tls=true
      # Use the special Traefik service api@internal with the web UI/Dashboard
      - traefik.http.routers.$TRAEFIK_SERVICE_NAME-https.service=api@internal
      # Use the Let's Encrypt resolver created below
      - traefik.http.routers.$TRAEFIK_SERVICE_NAME-https.tls.certresolver=$CERTRESOLVER
    volumes:
      - /mnt/docker/ymls/:/data/traefik-fileprovider.yml #yml with routes for external servers
      - /mnt/docker/certs/:/data/letsencrypt/acme.json
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always
    networks:
    - controllers
    - internalapps
    - apps

networks:
  apps:
    name: apps
    ipam:
      driver: default
      config:
        - subnet: $APPS_SUBNET
          gateway: $APPS_GW
  internalapps:
    name: internalapps
    internal: true
    ipam:
      driver: default
      config:
        - subnet: $INTERNALAPPS_SUBNET
          gateway: $INTERNALAPPS_GW
  controllers:
    name: controllers
    ipam:
      driver: default
      config:
        - subnet: $CONTROLLERS_SUBNET
          gateway: $CONTROLLERS_GW

volumes:
  authelia:
    driver_opts:
      type: "nfs4"
      o: "addr=$NAS_ADDR,$NAS_MOUNT"
      device: "$NAS_PATH/authelia/"

  authelia-secrets:
    driver_opts:
      type: "nfs4"
      o: "addr=$NAS_ADDR,nolock,soft,ro"
      device: "$NAS_PATH/authelia/secrets/"