version: "3.2"
services:
  dashy:
    image: lissy93/dashy:latest
    container_name: $DASHY_SERVICE_NAME
    environment:
      - PUID=$PUID
      - PGID=$PGID
    labels:
    - traefik.enable=true 
    - traefik.http.routers.$DASHY_SERVICE_NAME.rule=Host(`$DOMAIN`, `$DASHY_ADDR_NAME.$DOMAIN`, `www.$DOMAIN`)
    - traefik.http.routers.$DASHY_SERVICE_NAME.entrypoints=web
    - traefik.http.routers.$DASHY_SERVICE_NAME-https.rule=Host(`$DOMAIN`, `$DASHY_ADDR_NAME.$DOMAIN`, `www.$DOMAIN`)
    - traefik.http.routers.$DASHY_SERVICE_NAME-https.entrypoints=webs
    - traefik.http.routers.$DASHY_SERVICE_NAME-https.middlewares=$AUTHELIA_SERVICE_NAME@docker
    - traefik.http.routers.$DASHY_SERVICE_NAME-https.middlewares=$DASHY_SERVICE_NAME-apexredirect@docker
    - traefik.http.routers.$DASHY_SERVICE_NAME-https.tls=true
    - traefik.http.routers.$DASHY_SERVICE_NAME-https.service=$DASHY_SERVICE_NAME
    - traefik.http.routers.$DASHY_SERVICE_NAME-https.tls.certresolver=$CERTRESOLVER
    - traefik.http.middlewares.$DASHY_SERVICE_NAME-apexredirect.redirectRegex.regex=^https:\/\/(?:www\.)?$DOMAIN/(.*)
    - traefik.http.middlewares.$DASHY_SERVICE_NAME-apexredirect.redirectRegex.replacement=https://$DASHY_ADDR_NAME.$DOMAIN/$${1}
    - traefik.http.middlewares.$DASHY_SERVICE_NAME-apexredirect.redirectRegex.permanent=true
    - traefik.http.services.$DASHY_SERVICE_NAME.loadbalancer.server.port=80
    volumes:
      - /mnt/docker/ymls/dashy-config.yml:/app/public/conf.yml
    restart: unless-stopped
    networks:
      - internalapps 

  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: $HEIMDALL_SERVICE_NAME
    environment:
      - PUID=$PUID
      - PGID=$PGID
    labels:
    - traefik.enable=true 
    - traefik.http.routers.$HEIMDALL_SERVICE_NAME.rule=Host(`$HEIMDALL_ADDR_NAME.$DOMAIN`)
    - traefik.http.routers.$HEIMDALL_SERVICE_NAME.entrypoints=web
    - traefik.http.routers.$HEIMDALL_SERVICE_NAME-https.rule=Host(`$HEIMDALL_ADDR_NAME.$DOMAIN`)
    - traefik.http.routers.$HEIMDALL_SERVICE_NAME-https.entrypoints=webs
    - traefik.http.routers.$HEIMDALL_SERVICE_NAME-https.middlewares=$AUTHELIA_SERVICE_NAME@docker
    - traefik.http.routers.$HEIMDALL_SERVICE_NAME-https.tls=true
    - traefik.http.routers.$HEIMDALL_SERVICE_NAME-https.service=$HEIMDALL_SERVICE_NAME
    - traefik.http.routers.$HEIMDALL_SERVICE_NAME-https.tls.certresolver=$CERTRESOLVER
    - traefik.http.services.$HEIMDALL_SERVICE_NAME.loadbalancer.server.port=443
    - traefik.http.services.$HEIMDALL_SERVICE_NAME.loadbalancer.server.scheme=https
    volumes:
      - type: volume
        source: heimdall
        target: /config
        volume:
          nocopy: true
    restart: unless-stopped
    networks:
      - internalapps 

  mysql:
    image: mariadb:latest
    container_name: $MARIADB_SERVICE_NAME
    labels:
      - com.centurylinklabs.watchtower.monitor-only="true"
    volumes:
      - type: volume
        source: mysql
        target: /var/lib/mysql
        volume:
          nocopy: true  
    networks:
      - internalapps
    restart: unless-stopped     

  cloudbeaver:
    image: dbeaver/cloudbeaver:latest
    container_name: $CLOUDBEAVER_SERVICE_NAME
    labels:
    - traefik.enable=true 
    - traefik.http.routers.$CLOUDBEAVER_SERVICE_NAME.rule=Host(`$CLOUDBEAVER_ADDR_NAME.$DOMAIN`)
    - traefik.http.routers.$CLOUDBEAVER_SERVICE_NAME.entrypoints=web
    - traefik.http.routers.$CLOUDBEAVER_SERVICE_NAME-https.rule=Host(`$CLOUDBEAVER_ADDR_NAME.$DOMAIN`)
    - traefik.http.routers.$CLOUDBEAVER_SERVICE_NAME-https.entrypoints=webs
    - traefik.http.routers.$CLOUDBEAVER_SERVICE_NAME-https.middlewares=$AUTHELIA_SERVICE_NAME@docker
    - traefik.http.routers.$CLOUDBEAVER_SERVICE_NAME-https.tls=true
    - traefik.http.routers.$CLOUDBEAVER_SERVICE_NAME-https.service=$CLOUDBEAVER_SERVICE_NAME
    - traefik.http.routers.$CLOUDBEAVER_SERVICE_NAME-https.tls.certresolver=$CERTRESOLVER
    - traefik.http.services.$CLOUDBEAVER_SERVICE_NAME.loadbalancer.server.port=8978
    volumes:
      - type: volume
        source: cloudbeaver
        target: /opt/cloudbeaver/workspace 
        volume:
          nocopy: true  
    restart: unless-stopped
    networks:
      - internalapps

  guacamole:
    image: guacamole/guacamole
    container_name: $GUACAMOLE_SERVICE_NAME
    environment:
      - MYSQL_DATABASE=$GUACAMOLE_MYSQL_DATABASE
      - MYSQL_USER=$GUACAMOLE_MYSQL_USER
      - MYSQL_PASSWORD=$GUACAMOLE_MYSQL_PASSWORD
      - MYSQL_HOSTNAME=$MARIADB_SERVICE_NAME
      - GUACD_HOSTNAME=$GUACAMOLE_DAEMON_SERVICE_NAME
    labels:
      - traefik.enable=true 
      - traefik.http.routers.$GUACAMOLE_SERVICE_NAME.rule=Host(`$GUACAMOLE_ADDR_NAME.$DOMAIN`)
      - traefik.http.routers.$GUACAMOLE_SERVICE_NAME.entrypoints=web
      - traefik.http.routers.$GUACAMOLE_SERVICE_NAME-https.rule=Host(`$GUACAMOLE_ADDR_NAME.$DOMAIN`)
      - traefik.http.routers.$GUACAMOLE_SERVICE_NAME-https.entrypoints=webs
      - traefik.http.routers.$GUACAMOLE_SERVICE_NAME-https.middlewares=$AUTHELIA_SERVICE_NAME@docker
      - traefik.http.routers.$GUACAMOLE_SERVICE_NAME-https.middlewares=$GUACAMOLE_SERVICE_NAME-prefix
      - traefik.http.routers.$GUACAMOLE_SERVICE_NAME-https.tls=true
      - traefik.http.routers.$GUACAMOLE_SERVICE_NAME-https.service=$GUACAMOLE_SERVICE_NAME
      - traefik.http.routers.$GUACAMOLE_SERVICE_NAME-https.tls.certresolver=$CERTRESOLVER
      - traefik.http.services.$GUACAMOLE_SERVICE_NAME.loadbalancer.server.port=8080
      - traefik.http.middlewares.$GUACAMOLE_SERVICE_NAME-prefix.addprefix.prefix=/guacamole
    networks:
        - internalapps
    restart: unless-stopped

  guacamole-daemon:
    image: guacamole/guacd
    container_name: $GUACAMOLE_DAEMON_SERVICE_NAME
    networks:
        - internalapps
    restart: unless-stopped

  shlink-daemon:
    image: shlinkio/shlink:stable
    container_name: $SHLINK_DAEMON_SERVICE_NAME
    environment:
    - DEFAULT_DOMAIN=$SHLINK_DAEMON_ADDR_NAME.$DOMAIN_FORMAL
    - IS_HTTPS_ENABLED=true
    - GEOLITE_LICENSE_KEY=$SHLINK_DAEMON_GEOLITE_LICENSE_KEY
    - DB_DRIVER=$SHLINK_DAEMON_DB_DRIVER
    - DB_USER=$SHLINK_DAEMON_DB_USER
    - DB_PASSWORD=$SHLINK_DAEMON_DB_PASSWORD
    - DB_HOST=$MARIADB_SERVICE_NAME
    labels:
      - traefik.enable=true 
      - traefik.http.routers.$SHLINK_DAEMON_SERVICE_NAME.rule=Host(`$SHLINK_DAEMON_ADDR_NAME.$DOMAIN_FORMAL`)
      - traefik.http.routers.$SHLINK_DAEMON_SERVICE_NAME.entrypoints=web
      - traefik.http.routers.$SHLINK_DAEMON_SERVICE_NAME-https.rule=Host(`$SHLINK_DAEMON_ADDR_NAME.$DOMAIN_FORMAL`)
      - traefik.http.routers.$SHLINK_DAEMON_SERVICE_NAME-https.entrypoints=webs
      - traefik.http.routers.$SHLINK_DAEMON_SERVICE_NAME-https.tls=true
      - traefik.http.routers.$SHLINK_DAEMON_SERVICE_NAME-https.service=$SHLINK_DAEMON_SERVICE_NAME
      - traefik.http.routers.$SHLINK_DAEMON_SERVICE_NAME-https.tls.certresolver=$CERTRESOLVER
      - traefik.http.services.$SHLINK_DAEMON_SERVICE_NAME.loadbalancer.server.port=8080
    restart: unless-stopped
    networks:
      - internalapps    
    
  shlink-web-client:
    image: shlinkio/shlink-web-client
    container_name: $SHLINK_SERVICE_NAME
    environment:
    - SHLINK_SERVER_URL=https://$SHLINK_DAEMON_ADDR_NAME.$DOMAIN_FORMAL
    - SHLINK_SERVER_API_KEY=$SHLINK_DAEMON_API_KEY
    labels:
      - traefik.enable=true 
      - traefik.http.routers.$SHLINK_SERVICE_NAME.rule=Host(`$SHLINK_ADDR_NAME.$DOMAIN`)
      - traefik.http.routers.$SHLINK_SERVICE_NAME.entrypoints=web
      - traefik.http.routers.$SHLINK_SERVICE_NAME-https.rule=Host(`$SHLINK_ADDR_NAME.$DOMAIN`)
      - traefik.http.routers.$SHLINK_SERVICE_NAME-https.entrypoints=webs
      - traefik.http.routers.$SHLINK_SERVICE_NAME-https.middlewares=$AUTHELIA_SERVICE_NAME@docker
      - traefik.http.routers.$SHLINK_SERVICE_NAME-https.tls=true
      - traefik.http.routers.$SHLINK_SERVICE_NAME-https.service=$SHLINK_SERVICE_NAME
      - traefik.http.routers.$SHLINK_SERVICE_NAME-https.tls.certresolver=$CERTRESOLVER
      - traefik.http.services.$SHLINK_SERVICE_NAME.loadbalancer.server.port=80
    volumes:
      - type: volume
        source: shlink
        target: /usr/share/nginx/html/conf.d/
        volume:
          nocopy: true  
    restart: unless-stopped
    networks:
      - internalapps

  littlelink:
    image: timothystewart6/littlelink-server:latest
    container_name: $LITTLELINK_SERVICE_NAME
    environment:
      - META_TITLE=$LITTLELINK_META_TITLE
      - META_DESCRIPTION=$LITTLELINK_META_DESCRIPTION
      - META_AUTHOR=$LITTLELINK_META_AUTHOR
      - LANG=$LITTLELINK_LANG
      - META_INDEX_STATUS=$LITTLELINK_META_INDEX_STATUS
      - OG_SITE_NAME=$LITTLELINK_OG_SITE_NAME
      - OG_TITLE=$LITTLELINK_OG_TITLE
#      - OG_DESCRIPTION=
#      - OG_URL=https://
      - OG_IMAGE=$LITTLELINK_OG_IMAGE
      - OG_IMAGE_WIDTH=$LITTLELINK_OG_IMAGE_WIDTH
      - OG_IMAGE_HEIGHT=$LITTLELINK_OG_IMAGE_HEIGHT
#     - GA_TRACKING_ID=G-XXXXXXXXXX
      - THEME=$LITTLELINK_THEME
      - FAVICON_URL=$LITTLELINK_FAVICON_URL
      - AVATAR_URL=$LITTLELINK_AVATAR_URL
      - AVATAR_2X_URL=$LITTLELINK_AVATAR_2X_URL
      - AVATAR_ALT=$LITTLELINK_AVATAR_ALT
      - NAME=$LITTLELINK_NAME
      - BIO=$LITTLELINK_BIO
      # use ENV variable names for order, listed buttons will be boosted to the top
      - BUTTON_ORDER=$LITTLELINK_BUTTON_ORDER
      - CUSTOM_BUTTON_TEXT=$LITTLELINK_CUSTOM_BUTTON_TEXT
      - CUSTOM_BUTTON_URL=$LITTLELINK_CUSTOM_BUTTON_URL
      - CUSTOM_BUTTON_COLOR=$LITTLELINK_CUSTOM_BUTTON_COLOR
      - CUSTOM_BUTTON_TEXT_COLOR=$LITTLELINK_CUSTOM_BUTTON_TEXT_COLOR
      - CUSTOM_BUTTON_ALT_TEXT=$LITTLELINK_CUSTOM_BUTTON_ALT_TEXT
      - CUSTOM_BUTTON_NAME=$LITTLELINK_CUSTOM_BUTTON_NAME
      - CUSTOM_BUTTON_ICON=$LITTLELINK_CUSTOM_BUTTON_ICON
      - LINKED_IN=$LITTLELINK_LINKED_IN
      - GITHUB=$LITTLELINK_GITHUB
      - EMAIL=$LITTLELINK_EMAIL
      - FOOTER=$LITTLELINK_FOOTER
    labels:
      - traefik.enable=true 
      - traefik.http.routers.$LITTLELINK_SERVICE_NAME.rule=Host(`$DOMAIN_FORMAL`, `www.$DOMAIN_FORMAL`, `$LITTLELINK_ADDR_NAME.$DOMAIN_FORMAL`)
      - traefik.http.routers.$LITTLELINK_SERVICE_NAME.entrypoints=web
      - traefik.http.routers.$LITTLELINK_SERVICE_NAME-https.rule=Host(`$DOMAIN_FORMAL`, `www.$DOMAIN_FORMAL`, `$LITTLELINK_ADDR_NAME.$DOMAIN_FORMAL`)
      - traefik.http.routers.$LITTLELINK_SERVICE_NAME-https.entrypoints=webs
      - traefik.http.routers.$LITTLELINK_SERVICE_NAME-https.middlewares=$LITTLELINK_SERVICE_NAME-apexredirect@docker
      - traefik.http.routers.$LITTLELINK_SERVICE_NAME-https.tls=true
      - traefik.http.routers.$LITTLELINK_SERVICE_NAME-https.tls.certresolver=$CERTRESOLVER
      - traefik.http.routers.$LITTLELINK_SERVICE_NAME-https.service=$LITTLELINK_SERVICE_NAME
      - traefik.http.middlewares.$LITTLELINK_SERVICE_NAME-apexredirect.redirectRegex.regex=^https:\/\/(?:www\.)?$DOMAIN_FORMAL/(.*)
      - traefik.http.middlewares.$LITTLELINK_SERVICE_NAME-apexredirect.redirectRegex.replacement=https://$LITTLELINK_ADDR_NAME.$DOMAIN_FORMAL/$${1}
      - traefik.http.middlewares.$LITTLELINK_SERVICE_NAME-apexredirect.redirectRegex.permanent=true
      - traefik.http.services.$LITTLELINK_SERVICE_NAME.loadbalancer.server.port=3000
    restart: unless-stopped
    networks:
      - internalapps
    security_opt:
      - no-new-privileges:true

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: $QBITTORRENT_SERVICE_NAME
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - WEBUI_PORT=7070
    ports:
      - 6881:6881
      - 6881:6881/udp
    labels:
      - traefik.enable=true 
      - traefik.http.routers.$QBITTORRENT_SERVICE_NAME.rule=Host(`$QBITTORRENT_ADDR_NAME.$DOMAIN`)
      - traefik.http.routers.$QBITTORRENT_SERVICE_NAME.entrypoints=web
      - traefik.http.routers.$QBITTORRENT_SERVICE_NAME-https.rule=Host(`$QBITTORRENT_ADDR_NAME.$DOMAIN`)
      - traefik.http.routers.$QBITTORRENT_SERVICE_NAME-https.entrypoints=webs
#check connectivity with external apps
#      - traefik.http.routers.$QBITTORRENT_SERVICE_NAME-https.middlewares=$AUTHELIA_SERVICE_NAME@docker 
      - traefik.http.routers.$QBITTORRENT_SERVICE_NAME-https.tls=true
      - traefik.http.routers.$QBITTORRENT_SERVICE_NAME-https.service=$QBITTORRENT_SERVICE_NAME
      - traefik.http.routers.$QBITTORRENT_SERVICE_NAME-https.tls.certresolver=$CERTRESOLVER
      - traefik.http.services.$QBITTORRENT_SERVICE_NAME.loadbalancer.server.port=7070
    volumes:
      - /mnt/download/p2p:/downloads
      - type: volume
        source: qbittorrent
        target: /config
        volume:
          nocopy: true
    networks:
      - apps
      - internalapps  
    restart: unless-stopped

  privatebin:
    image: privatebin/nginx-fpm-alpine:latest
    container_name: $PRIVATEBIN_SERVICE_NAME
    environment:
      - TZ=$TZ
    labels:
      - traefik.enable=true 
      - traefik.http.routers.$PRIVATEBIN_SERVICE_NAME.rule=Host(`$PRIVATEBIN_ADDR_NAME.$DOMAIN`)
      - traefik.http.routers.$PRIVATEBIN_SERVICE_NAME.entrypoints=web
      - traefik.http.routers.$PRIVATEBIN_SERVICE_NAME-https.rule=Host(`$PRIVATEBIN_ADDR_NAME.$DOMAIN`)
      - traefik.http.routers.$PRIVATEBIN_SERVICE_NAME-https.entrypoints=webs
      - traefik.http.routers.$PRIVATEBIN_SERVICE_NAME-https.tls=true
      - traefik.http.routers.$PRIVATEBIN_SERVICE_NAME-https.service=$PRIVATEBIN_SERVICE_NAME
      - traefik.http.routers.$PRIVATEBIN_SERVICE_NAME-https.tls.certresolver=$CERTRESOLVER
      - traefik.http.services.$PRIVATEBIN_SERVICE_NAME.loadbalancer.server.port=8080
    volumes:
      - /mnt/docker/ymls/privatebin.php:/srv/cfg/conf.php:ro
      - type: volume
        source: privatebin-data
        target: /srv/data
        volume: 
          nocopy: true  
    
    networks:
      - internalapps  
    restart: unless-stopped

  syncthing:
    image: lscr.io/linuxserver/syncthing:latest
    container_name: $SYNCTHING_SERVICE_NAME
    hostname: $SYNCTHING_SERVICE_NAME
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    ports:
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    labels:
      - traefik.enable=true 
      - traefik.http.routers.$SYNCTHING_SERVICE_NAME.rule=Host(`$SYNCTHING_ADDR_NAME.$DOMAIN`)
      - traefik.http.routers.$SYNCTHING_SERVICE_NAME.entrypoints=web
      - traefik.http.routers.$SYNCTHING_SERVICE_NAME-https.rule=Host(`$SYNCTHING_ADDR_NAME.$DOMAIN`)
      - traefik.http.routers.$SYNCTHING_SERVICE_NAME-https.entrypoints=webs
      - traefik.http.routers.$SYNCTHING_SERVICE_NAME-https.middlewares=$AUTHELIA_SERVICE_NAME@docker
      - traefik.http.routers.$SYNCTHING_SERVICE_NAME-https.tls=true
      - traefik.http.routers.$SYNCTHING_SERVICE_NAME-https.service=$SYNCTHING_SERVICE_NAME
      - traefik.http.routers.$SYNCTHING_SERVICE_NAME-https.tls.certresolver=$CERTRESOLVER
      - traefik.http.services.$SYNCTHING_SERVICE_NAME.loadbalancer.server.port=8384
    volumes:
      - /mnt/batocera:/mnt/batocera
      - type: volume
        source: syncthing-data
        target: /config
        volume: 
          nocopy: true
    networks:
      - apps
      - internalapps  
    restart: unless-stopped

networks:
  internalapps:
    name: internalapps
    internal: true
    ipam:
      driver: default
      config:
        - subnet: $INTERNALAPPS_SUBNET
          gateway: $INTERNALAPPS_GW
  apps:
    name: apps
    ipam:
      driver: default
      config:
        - subnet: $APPS_SUBNET
          gateway: $APPS_GW

volumes:
  syncthing-data:
    driver_opts:
      type: "nfs4"
      o: "addr=$NAS_ADDR,$NAS_MOUNT_PARAMS"
      device: "$NAS_PATH/syncthing/"

  heimdall:
    driver_opts:
      type: "nfs4"
      o: "addr=$NAS_ADDR,$NAS_MOUNT_PARAMS"
      device: "$NAS_PATH/heimdall/"

  shlink:
    driver_opts:
      type: "nfs4"
      o: "addr=$NAS_ADDR,$NAS_MOUNT_PARAMS"
      device: "$NAS_PATH/shlink/"

  mysql:
    driver_opts:
      type: "nfs4"
      o: "addr=$NAS_ADDR,$NAS_MOUNT_PARAMS"
      device: "$NAS_PATH/mysql/"

  cloudbeaver:
    driver_opts:
      type: "nfs4"
      o: "addr=$NAS_ADDR,$NAS_MOUNT_PARAMS"
      device: "$NAS_PATH/cloudbeaver/"

  privatebin-data:
    driver_opts:
      type: "nfs4"
      o: "addr=$NAS_ADDR,$NAS_MOUNT_PARAMS"
      device: "$NAS_PATH/privatebin"

  qbittorrent:
    driver_opts:
      type: "nfs4"
      o: "addr=$NAS_ADDR,$NAS_MOUNT_PARAMS"
      device: "$NAS_PATH/qbittorrent"